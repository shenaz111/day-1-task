     Objects, in JavaScript, is it’s most important data-type and forms the building blocks for 
  modern JavaScript. These objects are quite different from JavaScript’s primitive data-types
 (Number, String, Boolean, null, undefined and symbol) in the sense that while these primitive
  data-types all store a single value each (depending on their types).
 Objects are more complex and each object may contain any combination of these primitive 
 data-types as well as reference data-types.An object, is a reference data type. Variables
 that are assigned a reference value are given a reference or a pointer to that value. 
 That reference or pointer points to the location in memory where the object is stored.
 The variables don’t actually store the value.
 Loosely speaking, objects in JavaScript may be defined as an unordered collection of
 related data, of primitive or reference types, in the form of “key: value” pairs.
 These keys can be variables or functions and are called properties and methods,
 respectively, in the context of an object.
      1.The syntax for adding a property to an object is :
ObjectName.ObjectProperty = propertyValue;
       2.The syntax for deleting a property from an object is:
delete ObjectName.ObjectProperty;
        3.The syntax to access a property from an object is:
objectName.property        
           //or
objectName["property”]     
           //or
objectName[expression]   
